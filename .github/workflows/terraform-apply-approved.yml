name: Terragrunt Apply After Approval

on:
  repository_dispatch:
    types: [slack-approval-received]

env:
  TF_VERSION: '1.6.6'
  TERRAGRUNT_VERSION: '0.54.0'
  TF_IN_AUTOMATION: true
  TF_INPUT: false

jobs:
  apply-approved-changes:
    name: Apply Approved Infrastructure Changes
    runs-on: ubuntu-latest
    if: github.event.client_payload.approved == true
    
    environment:
      name: infrastructure
      url: https://console.cloud.google.com/home/dashboard?project=${{ vars.PROJECT_ID }}
    
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Log approval details
      run: |
        echo "üéâ Approval received!"
        echo "Run ID: ${{ github.event.client_payload.run_id }}"
        echo "Approved by: ${{ github.event.client_payload.approver }}"
        echo "Approval time: ${{ github.event.client_payload.timestamp }}"
    
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        terraform_wrapper: false
    
    - name: Setup Terragrunt
      run: |
        wget -q https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64
        chmod +x terragrunt_linux_amd64
        sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ vars.TERRAFORM_SERVICE_ACCOUNT }}
    
    - name: Parse approval metadata
      id: parse
      run: |
        # Extract environments from run ID or metadata
        # For now, assume prod and pre-prod need approval
        echo "environments=[\"prod\", \"pre-prod\"]" >> $GITHUB_OUTPUT
    
    - name: Create approval audit log
      run: |
        gcloud logging write "webapp-team-infrastructure" \
          "{
            \"message\": \"INFRASTRUCTURE APPLY APPROVED VIA SLACK\",
            \"event_type\": \"terragrunt_apply_approved\",
            \"repository\": \"${{ github.repository }}\",
            \"original_run_id\": \"${{ github.event.client_payload.run_id }}\",
            \"approver\": \"${{ github.event.client_payload.approver }}\",
            \"approval_time\": \"${{ github.event.client_payload.timestamp }}\",
            \"compliance_framework\": \"iso27001-soc2-gdpr\"
          }" \
          --severity=NOTICE \
          --project=u2i-tenant-webapp-prod
    
    - name: Apply approved environments
      run: |
        echo "üöÄ Applying approved production environments..."
        
        for env in prod pre-prod; do
          echo "Applying $env environment..."
          cd environments/$env
          terragrunt init
          terragrunt apply -auto-approve
          cd ../..
        done
        
        echo "‚úÖ All production environments applied successfully"
    
    - name: Create completion audit log
      run: |
        gcloud logging write "webapp-team-infrastructure" \
          "{
            \"message\": \"INFRASTRUCTURE APPLY COMPLETED\",
            \"event_type\": \"terragrunt_apply_success\",
            \"repository\": \"${{ github.repository }}\",
            \"original_run_id\": \"${{ github.event.client_payload.run_id }}\",
            \"approver\": \"${{ github.event.client_payload.approver }}\",
            \"compliance_framework\": \"iso27001-soc2-gdpr\"
          }" \
          --severity=NOTICE \
          --project=u2i-tenant-webapp-prod

  handle-rejection:
    name: Handle Rejected Changes
    runs-on: ubuntu-latest
    if: github.event.client_payload.approved == false
    
    steps:
    - name: Log rejection details
      run: |
        echo "‚ùå Changes were rejected"
        echo "Run ID: ${{ github.event.client_payload.run_id }}"
        echo "Rejected by: ${{ github.event.client_payload.approver }}"
        echo "Rejection time: ${{ github.event.client_payload.timestamp }}"